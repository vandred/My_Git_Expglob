// Generated by IcedCoffeeScript 108.0.11
(function() {
  (function() {
    return $(function() {
      var $resultModal, ScreeningsResults, getFilters, getScreeningResultByID, userPermissionsModal, _$resultsTable, _createOrEditModal, _filters, _permissions, _resultService;
      _filters = {};
      $('.filterDD').getBySelect();
      $resultModal = $("#resultModal");
      _$resultsTable = $('#ScreeningsResultsTable');
      _resultService = abp.services.app.screening;
      _permissions = {
        create: abp.auth.hasPermission('Pages.Administration.Companies.Create'),
        edit: abp.auth.hasPermission('Pages.Administration.Companies.Edit'),
        list: abp.auth.hasPermission('Pages.Administration.Companies'),
        'delete': abp.auth.hasPermission('Pages.Administration.Companies.Delete')
      };
      _createOrEditModal = new app.ModalManager({
        viewUrl: abp.appPath + 'Mpa/Users/CreateOrEditModal',
        scriptUrl: abp.appPath + 'Areas/Mpa/Views/Users/_CreateOrEditModal.js',
        modalClass: 'CreateOrEditUserModal'
      });
      userPermissionsModal = new app.ModalManager({
        viewUrl: abp.appPath + 'Mpa/Users/PermissionsModal',
        scriptUrl: abp.appPath + 'Areas/Mpa/Views/Users/_PermissionsModal.js',
        modalClass: 'UserPermissionsModal'
      });
      _$resultsTable.jtable({
        title: app.localize('Screenings'),
        paging: true,
        sorting: true,
        multiSorting: false,
        actions: {
          listAction: {
            method: _resultService.screeningsResults
          }
        },
        fields: {
          id: {
            key: true,
            sort: false,
            title: '#',
            width: '1%'
          },
          dateTime: {
            title: app.localize('DateTime'),
            width: '10%',
            display: function(data) {
              var date, day, time;
              date = new Date(data.record.dateTime);
              day = date.toLocaleDateString();
              time = date.toLocaleTimeString().replace(/\:\d{2}\ /, ' ');
              return "" + day + "</br>" + time;
            }
          },
          account: {
            title: app.localize('Account'),
            width: '10%'
          },
          patient: {
            title: app.localize('Patient'),
            width: '20%',
            display: function(data) {
              return data.record.patient.fullName;
            }
          },
          clinician: {
            title: app.localize('Clinician'),
            width: '20%'
          },
          payor: {
            title: app.localize('Payor'),
            width: '10%',
            display: function(data) {
              return data.record.patient.payor;
            }
          },
          screening: {
            title: app.localize('Screening'),
            width: '10%',
            display: function(data) {
              return data.record.typeScreening.type;
            }
          },
          cost: {
            title: app.localize('Cost'),
            width: '10%'
          },
          totalScore: {
            title: app.localize('TotalScore'),
            width: '2%',
            display: function(data) {
              var backColor, color;
              backColor = data.record.resultRed;
              color = backColor === 'Yellow' ? 'color: black; ' : ' ';
              return $("<div class='circle score-circle' style='background-color: " + backColor + "; " + color + "'>" + data.record.totalScore + "</div>");
            }
          },
          result: {
            title: app.localize('Result'),
            width: '1%',
            display: function(data) {
              var $span, pdfButton, reports, style, title;
              $span = $('<div style="width:130px;"></div>');
              style = (function() {
                switch (data.record.resultRed) {
                  case 'Green':
                    return 'success';
                  case 'Yellow':
                    return 'warning';
                  case 'Red':
                    return 'danger';
                  default:
                    return 'default';
                }
              })();
              title = "" + data.record.patient.fullName + " / " + data.record.typeScreening.type + " / " + data.record.totalScore;
              $("<button class='btn btn-default btn-xs _actionButton' title='View' type='button' data-action='modal' aria-label='Left Align' data-id='" + data.record.id + "' data-title='" + title + "' data-style='" + style + "'> <span class='glyphicon glyphicon-modal-window' aria-hidden='true'></span> View </button>").appendTo($span);
              reports = data.record.reports;
              pdfButton;
              if (typeof reports !== 'undefined' && reports.length > 0) {
                pdfButton = $('<a class="btn btn-default btn-xs" title="PDF" target="_blank" href="' + reports[reports.length - 1].url + '">PDF</a>');
              } else {
                pdfButton = $('<a class="btn btn-default btn-xs" title="PDF" target="_blank" href="#">PDF</a>');
              }
              pdfButton.appendTo($span).click(function() {});
              return $span;
            }
          }
        }
      });
      ScreeningsResults = function(reload) {
        if (reload) {
          return _$resultsTable.jtable('reload');
        } else {
          return _$resultsTable.jtable('load', _filters);
        }
      };
      abp.event.on('app.createOrEditUserModalSaved', function() {
        return getCompanies(true);
      });
      ScreeningsResults();
      getScreeningResultByID = function(id, title, style) {
        var $modalBody;
        $resultModal.find('.modal-content').addClass("panel-" + style).data('style', style).end().find('.modal-title').html(title).end().modal('show');
        $modalBody = $('<div></div>');
        return _resultService.getAllFullScreening({
          id: id
        }).then(function(data) {
          var $radio, answer, checked, question, questions, _i, _j, _len, _len1, _ref;
          questions = data.typeScreening.questions;
          for (_i = 0, _len = questions.length; _i < _len; _i++) {
            question = questions[_i];
            $("</br><h4>" + question.questionStr + "</h4>").appendTo($modalBody);
            _ref = question.answers;
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              answer = _ref[_j];
              checked = answer.select ? 'checked' : '';
              $radio = $("<div class='radio disabled'> <label> <input type='radio' name='answer_" + answer.id + "' id='optionsRadios3' value='option3' disabled " + checked + "> " + answer.optionStr + " </label> </div>");
              $radio.appendTo($modalBody);
            }
          }
          return $resultModal.find('.progress').fadeOut().end().find('#result').html($modalBody).fadeIn();
        });
      };
      $('body').on('click', '._actionButton', function(e) {
        var action, filter, id, style, target, title;
        action = $(e.currentTarget).data('action');
        switch (action) {
          case 'dateFilter':
            target = $(e.currentTarget);
            if (target.hasClass('active')) {
              target.removeClass('active');
              filter = void 0;
            } else {
              $('._actionButton.active').removeClass('active');
              target.addClass('active');
              filter = e.currentTarget.dataset.filter;
            }
            _filters.dateFilter = filter;
            getFilters();
            return ScreeningsResults();
          case 'modal':
            id = e.currentTarget.dataset.id;
            title = e.currentTarget.dataset.title;
            style = e.currentTarget.dataset.style;
            return getScreeningResultByID(id, title, style);
        }
      });
      $("#searchButton").on('click', function() {
        getFilters();
        return ScreeningsResults();
      });
      getFilters = function() {
        var tempObj;
        tempObj = {
          practice: $('#filterPractice').val() || void 0,
          screening: $('#filterScreening').val() || void 0,
          name: $('#filterName').val() || void 0,
          start: $('#filterStart').val() || void 0,
          end: $('#filterEnd').val() || void 0
        };
        return Object.assign(_filters, tempObj);
      };
      return $resultModal.on('hidden.bs.modal', function(e) {
        return $resultModal.find('.modal-content').removeClass(function() {
          return 'panel-' + $(this).data('style');
        }).end().find('#result').hide().end().find('.progress').show();
      });
    });
  })();

}).call(this);
